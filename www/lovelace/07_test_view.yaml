title: 07_test_view
#background: center / cover no-repeat url("/local/images/fond ecran/metal.png") fixed
icon: mdi:ab-testing
#panel : true



cards:
- type: custom:button-card
  entity: 'sensor.lama_disk1_temperature'
  icon: 'mdi:raspberry-pi'
  aspect_ratio: 1/1
  name: HassOS test
  styles:
    card:
      - background-color: '#000044'
      - border-radius: 10%
      - padding: 10%
      - color: ivory
      - font-size: 10px
      - text-shadow: 0px 0px 5px black
      - text-transform: capitalize
    grid:
      - grid-template-areas: '"i temp" "n n" "cpu cpu" "ram ram" "sd sd"'
      - grid-template-columns: 1fr 1fr
      - grid-template-rows: 1fr min-content min-content min-content min-content
    name:
      - font-weight: bold
      - font-size: 13px
      - color: white
      - align-self: middle
      - justify-self: start
      - padding-bottom: 4px
    img_cell:
      - justify-content: start
      - align-items: start
      - margin: none
    icon:
      - color: >
          [[[
            if (entity.state < 60) return 'lime';
            if (entity.state >= 60 && entity.state < 80) return 'orange';
            else return 'red';
          ]]]
      - width: 70%
      - margin-top: -10%
    custom_fields:
      temp:
        - align-self: start
        - justify-self: end
      cpu:
        - padding-bottom: 2px
        - align-self: middle
        - justify-self: start
        - --text-color-sensor: '[[[ if (states["sensor.raspi_cpu"].state > 80) return "red"; ]]]'
      ram:
        - padding-bottom: 2px
        - align-self: middle
        - justify-self: start
        - --text-color-sensor: '[[[ if (states["sensor.raspi_ram"].state > 80) return "red"; ]]]'
      sd:
        - align-self: middle
        - justify-self: start
        - --text-color-sensor: '[[[ if (states["sensor.raspi_sd"].state > 80) return "red"; ]]]'
  custom_fields:
    temp: >
      [[[
        return `<ha-icon
          icon="mdi:thermometer"
          style="width: 12px; height: 12px; color: yellow;">
          </ha-icon><span>${entity.state}°C</span>`
      ]]]
    cpu: >
      [[[
        return `<ha-icon
          icon="mdi:server"
          style="width: 12px; height: 12px; color: deepskyblue;">
          </ha-icon><span>CPU: <span style="color: var(--text-color-sensor);">${states['sensor.raspi_cpu'].state}%</span></span>`
      ]]]
    ram: >
      [[[
        return `<ha-icon
          icon="mdi:memory"
          style="width: 12px; height: 12px; color: deepskyblue;">
          </ha-icon><span>RAM: <span style="color: var(--text-color-sensor);">${states['sensor.raspi_ram'].state}%</span></span>`
      ]]]
    sd: >
      [[[
        return `<ha-icon
          icon="mdi:harddisk"
          style="width: 12px; height: 12px; color: deepskyblue;">
          </ha-icon><span>SD: <span style="color: var(--text-color-sensor);">${states['sensor.raspi_sd'].state}%</span></span>`
      ]]]























####################################################################################################################################################################################################################################################################################################################################################
####    HASSOS
####################################################################################################################################################################################################################################################################################################################################################
# button_hassos:
# cards:
  # - type: custom:button-card
  #   entity: binary_sensor.updater
  #   icon: "mdi:home-assistant"
  #   aspect_ratio: 1/1
  #   name: HassOS
  #   # tap_action:
  #   #     action: navigate
  #   #     navigation_path: >-
  #   #     /hassio/system
  #   double_tap_action:
  #       action: call-service
  #       service: homeassistant.restart
  #   hold_action:
  #       action: more-info
  #       haptic: success
  #   # card_mod:
  #   #     style: |
  #   #     ha-card {
  #   #         --paper-card-background-color: 'rgba(11, 11, 11, 0.00)';
  #   #         box-shadow: 2px 2px rgba(0,0,0,0.0);
  #   #         border-radius: 15px;
  #   #     }
  #   styles:
  #       card:
  #       - background-color: var(--primary-background-color)
  #       - padding-left: 10px
  #       - border-radius: 20px
  #       - font-size: 13px
  #       - text-shadow: 0px 0px 0px white
  #       - text-transform: capitalize
  #       - padding: 5%
  #       - color: "var(--text-medium-color)"
  #       grid:
  #       - grid-template-areas: '"i i" "n n" "current current" "local local" "uptime uptime" '
  #       - grid-template-columns: 1fr
  #       - grid-template-rows: 1fr min-content min-content min-content
  #       name:
  #       - font-weight: bold
  #       - font-size: 15px
  #       - color: "var(--text-color)"
  #       - align-self: middle
  #       - justify-self: start
  #       - padding-bottom: 4px
  #       img_cell:
  #       - justify-content: start
  #       - align-items: start
  #       icon:
  #       - color: >
  #           [[[
  #               if (entity.state == 'on') return 'orange';
  #               return 'lime';
  #           ]]]
  #       - width: 40%
  #       #                - margin-top: +30%
  #       - animation: >
  #           [[[ if (entity.state == 'on') return 'blink 2s ease infinite'; ]]]
  #       custom_fields:
  #       current:
  #           - align-self: start
  #           - justify-self: start
  #           - --text-color-sensor: >
  #               [[[ if (entity.state == 'on') return 'orange'; return 'lime'; ]]]
  #           - --animation: >
  #               [[[ if (entity.state == 'on') return 'blink 2s ease infinite'; ]]]
  #       local:
  #           - align-self: start
  #           - justify-self: start
  #       uptime:
  #           - padding-top: 5px
  #           - align-self: start
  #           - justify-self: start
  #           - font-size: 13px
  #   custom_fields:
  #       current: >
  #       [[[
  #           return `<ha-icon
  #           icon='mdi:home-assistant'
  #           style='width: 15px; height: 15px; color: deepskyblue;'>
  #           </ha-icon><span>Actuelle: <span style='color: var(--text-color-sensor);animation: var(--animation)'>${states['sensor.newest_version'].state}</span></span>`
  #       ]]]
  #       local: >
  #       [[[
  #           return `<ha-icon
  #           icon='mdi:home-assistant'
  #           style='width: 15px; height: 15px; color: deepskyblue;'>
  #           </ha-icon><span>Locale: <span style='color: lime;'>${states['sensor.version'].state}</span></span>`
  #       ]]]
  #       uptime: >
  #       [[[
  #           return `<ha-icon
  #           style='width: 0px; height: 0px; color: yellow;'>
  #           </ha-icon><span style='align: left; <span style='color: lime;'>${states['sensor.ha_uptime'].state}</span></span>`              
  #       ]]]















# cards:
#   - type: vertical-stack
#     cards:
#     # - type: custom:decluttering-card
#     #     template: button_hassos
#     - type: custom:decluttering-card
#       template: button_synology
#       variables:
#       - entity: "sensor.lama_cpu_utilization_total"
#       - icon: mdi:nas
#       - name: Synology
#       - colorstyle: "[[[
#           if (entity.state == 'OL') return 'lime';
#           if (entity.state == 'OB') return 'yellow';
#           if (entity.state == 'LB') return 'magenta';
#           if (entity.state == 'OB LB') return 'red';
#           if (entity.state == 'OL LB') return 'cyan';
#           else return 'deepskyblue';
#           ]]]"
#       - tempfield: "[[[
#           return `<ha-icon icon='mdi:thermometer' style='width: 20px; height: 20px; color: yellow;'></ha-icon>
#           <span style='align: left;'>${Math.round(states['sensor.lama_temperature_sda'].state)}°C</span>`
#           ]]]"
#       - cpufield: "[[[
#           return `<ha-icon icon='mdi:server' style='width: 20px; height: 20px; color: deepskyblue;'></ha-icon>
#           <span>CPU: <span style='color: var(--text-color-sensor);'>${states['sensor.lama_cpu_utilization_total'].state}%</span></span>`
#           ]]]"
#       - ramfield: "[[[
#           return `<ha-icon icon='mdi:memory' style='width: 20px; height: 20px; color: deepskyblue;'></ha-icon>
#           <span>RAM: <span style='color: var(--text-color-sensor);'>${states['sensor.lama_memory_usage_real'].state}%</span></span>`
#           ]]]"
#       - sdfield: "[[[
#           return `<ha-icon icon='mdi:harddisk' style='width: 20px; height: 20px; color: deepskyblue;'></ha-icon>
#           <span>HDD: <span style='color: var(--text-color-sensor);'>${states['sensor.lama_volume_used_volume_1'].state}%</span></span>`
#           ]]]"
#       - cpustyle: "[[[
#           if (states['sensor.lama_cpu_utilization_total'].state > 40) return 'orange';
#           if (states['sensor.lama_cpu_utilization_total'].state >= 60 && states['sensor.lama_cpu_utilization_total'].state < 80) return 'red';
#           else return 'lime';
#           ]]]"
#       - ramstyle: "[[[
#           if (states['sensor.lama_memory_usage_real'].state > 40) return 'orange';
#           if (states['sensor.lama_memory_usage_real'].state >= 60 && states['sensor.lama_memory_usage_real'].state < 80) return 'red';
#           else return 'lime';
#           ]]]"
#       - sdstyle: "[[[
#           if (states['sensor.lama_volume_used_volume_1'].state > 50) return 'orange';
#           if (states['sensor.lama_volume_used_volume_1'].state >= 60 && states['sensor.lama_volume_used_volume_1'].state < 80) return 'red';
#           else return 'lime';
#           ]]]"
# ### template modifié
#     - type: custom:decluttering-card
#       template: button_synology_v2
#       variables:
#       - entity: "sensor.lama_cpu_utilization_total"
#       - name: LAMA
#       - tempfield: sensor.lama_temperature_sda
#       - cpufield: sensor.lama_cpu_utilization_total
#       - ramfield: sensor.lama_memory_usage_real
#       - sdfield: sensor.lama_volume_used_volume_1
#       - cpustyle: sensor.lama_cpu_utilization_total
#       - ramstyle: sensor.lama_memory_usage_real
#       - sdstyle: sensor.lama_volume_used_volume_1